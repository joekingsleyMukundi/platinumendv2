version: '3.8'
services:
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8080
    volumes:
      - ./auth:/usr/src/app
    # ports:
    #   - 8080:8080
    expose:
      - 8080
    env_file:
      - .env
    depends_on:
      - auth_db

  nginx:
    restart: always
    depends_on:
      - auth
      - customers
      - jobs
      - blogs
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 8000:80
    volumes:
      - static:/static

  customers:
    build:
      context: ./customers
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./customers:/usr/src/app
    # ports:
    #   - 8000:8000
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - auth_db

  jobs:
    build:
      context: ./jobs
      dockerfile: Dockerfile
    volumes:
      - ./jobs:/usr/src/app
    ports:
      - 3000:3000
    expose:
      - 3000
    env_file:
      - .env
    depends_on:
      - auth_db
  blogs:
    build:
      context: ./blog
      dockerfile: Dockerfile
    volumes:
      - ./blog:/usr/src/app
    ports:
      - 3030:3030
    expose:
      - 3030
    env_file:
      - .env
    depends_on:
      - auth_db

  auth_db:
    image: mysql:5.7
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
      - ./mysql/db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root

  consumer_queue:
    build:
      context: ./customers
      dockerfile: Dockerfile
    command: python consumer.py
    depends_on:
      - auth_db
      - customers
    env_file:
      - .env
volumes:
  static:
